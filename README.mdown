# ALJeeRS

A Little JSON (ignore the e's) Rest Server.

This project is a super simple wrapper around Jetty that allows you to (i think) easily get JSON requests and send JSON responses.


## Running examples via the console

* install maven (or make sure mvn is in your path)
* run ./run_example.sh
* cruise on over to http://localhost:8080/fe to check out the simple console

The console lets you make GET, PUT, POST, HEAD and DELETE request against any of the configured handlers. If you're running the example
you'll be able to hit a bunch of methods in the ExampleHandler and see what their output looks like...

## Running the app

The app is just a Java app with Jetty embeded... so you can run it the same way you run any Java app.
The only "special" thing it needs is a property that tells it what config file to use.

The config is just a properties file where the keys are a URI "prefix" and the values are a full qualified class name.
If you look at the example/example.conf file you'll see 2 registered handlers...

    /example = com.phatduckk.aljeers.example.ExampleHandler
    /fe = com.phatduckk.aljeers.handler.FrontendHandler

This tells the app that whenever a request comes in for `/example/FOO` run the `FOO` method in the class `com.phatduckk.aljeers.example.ExampleHandler`

## Writing a handler

* write a class that extends BaseHandler
* all public methods are eligible to be accessed via a URI
    * to make a method accessible
        * its signature must match `public methodNameHere(HttpServletRequest req, HttpServletResponse resp)`
        * you need to annotate it with `@GET`, `@POST`, `@PUT`, `@DELETE` or `@HEAD` to define what HTTP methods are allowed
    * the method can throw any `Throwable` it wants...
    * anything returned from the method will be JSON-encoded and sent
        * including exceptions
* edit the server's config file to register your handler with a URI prefix
        /my_prefix = com.example.you.handler.YourNewHandler
* restart the app and tell it to use your config file
        -Dconf.handlers=your_config_file.conf
